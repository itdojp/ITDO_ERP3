openapi: 3.1.0
info:
  title: ITDO ERP3 API
  version: 0.1.0
  description: >-
    API-firstなERPのv1スケルトン。認証はOIDC Bearer、テナントは`X-Tenant-ID`で解決。
servers:
  - url: https://api.example.com
    description: Production (placeholder)
  - url: https://stg.api.example.com
    description: Staging (placeholder)
tags:
  - name: projects
    description: プロジェクト管理（一覧/詳細/登録 等）
  - name: timesheets
    description: 工数登録と承認関連
  - name: costing
    description: 原価計算/採算取得
  - name: compliance
    description: 電子帳簿保存法・インボイス対応
  - name: integration
    description: 外部連携（OCR等）
  - name: sales
    description: 販売（見積/受注/請求連動）
  - name: procurement
    description: 購買（発注/検収/買掛）
  - name: contracts
    description: 契約管理（改定履歴/請求条件/更新アラート/電子署名連携）
  - name: hr
    description: 勤怠（打刻/36協定チェック/月次締め/外部連携）
  - name: accounting
    description: 会計連携（勘定科目マッピング/仕訳エクスポート）
  - name: metadata
    description: コード/マスタ/設定
paths:
  /api/v1/projects:
    get:
      tags: [projects]
      summary: プロジェクト一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: status
          in: query
          schema:
            type: string
            enum: [all, planned, active, onhold, closed]
          description: 取得対象のステータス（省略時は all）
        - name: keyword
          in: query
          schema: { type: string }
          description: プロジェクト名・コードなどを対象とした部分一致検索
        - name: manager
          in: query
          schema: { type: string }
          description: マネージャ名の部分一致検索
        - name: health
          in: query
          schema:
            type: string
            enum: [green, yellow, red]
          description: ヘルス指標によるフィルタ
        - name: tag
          in: query
          schema: { type: string }
          description: 手入力タグ（AND 条件）
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: 代表タグ（カンマ区切り）。いずれか一致で OR フィルタ
        - name: first
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 24
          description: 1ページあたりの取得件数
        - name: after
          in: query
          schema: { type: string }
          description: 直前ページのカーソル ID（`next_cursor`）
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjects'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/projects/{id}/activate:
    post:
      tags: [projects]
      summary: プロジェクト開始
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        default:
          $ref: '#/components/responses/Error'

  /api/v1/projects/{id}/hold:
    post:
      tags: [projects]
      summary: プロジェクト一時停止
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason: { type: string }
      responses:
        '200': { description: OK }
        default:
          $ref: '#/components/responses/Error'

  /api/v1/projects/{id}/resume:
    post:
      tags: [projects]
      summary: プロジェクト再開
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        default:
          $ref: '#/components/responses/Error'

  /api/v1/projects/{id}/close:
    post:
      tags: [projects]
      summary: プロジェクト完了
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                closed_on:
                  type: string
                  format: date
                comment:
                  type: string
      responses:
        '200': { description: OK }
        default:
          $ref: '#/components/responses/Error'

  /api/v1/timesheets:
    get:
      tags: [timesheets]
      summary: 工数一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimesheets'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags: [timesheets]
      summary: 工数登録
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetEntry'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/timesheets/{id}/submit:
    post:
      tags: [timesheets]
      summary: タイムシート提出
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetStateChangeRequest'
      responses:
        '202':
          description: Accepted
        default:
          $ref: '#/components/responses/Error'

  /api/v1/timesheets/{id}/approve:
    post:
      tags: [timesheets]
      summary: タイムシート承認
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetStateChangeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/timesheets/{id}/reject:
    post:
      tags: [timesheets]
      summary: タイムシート差戻し
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetStateChangeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntry'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/timesheets/{id}/resubmit:
    post:
      tags: [timesheets]
      summary: タイムシート再提出
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetStateChangeRequest'
      responses:
        '202':
          description: Accepted
        default:
          $ref: '#/components/responses/Error'

  /api/v1/projects/{id}/profit:
    get:
      tags: [costing]
      summary: プロジェクト採算（MVP）
      description: revenue, labor_cost, external_cost, overhead, gross_profit, progress_based_revenue を返す
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfitResponse'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/compliance/invoices:
    post:
      tags: [compliance]
      summary: 電子取引保存（インボイス）
      description: PDFメタと添付の登録（改ざん防止/検索キー/時刻情報を前提）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceInvoiceRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        default:
          $ref: '#/components/responses/Error'

  /api/v1/compliance/invoices/search:
    get:
      tags: [compliance]
      summary: 電子取引保存の検索
      description: >-
        ソート対象は `issue_date`, `amount`, `invoice_number`, `counterparty`。降順の場合は `-field`
        を指定し、同値時は `-id` を二次キーとして安定ソートする。
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
        - name: date_from
          in: query
          schema: { type: string, format: date }
        - name: date_to
          in: query
          schema: { type: string, format: date }
        - name: amount_from
          in: query
          schema: { type: number }
        - name: amount_to
          in: query
          schema: { type: number }
        - name: counterparty
          in: query
          schema: { type: string }
        - name: match
          in: query
          schema: { type: string, enum: [exact, partial] }
          description: 検索の一致種別（exact=完全一致, partial=部分一致）
        - name: operator
          in: query
          schema: { type: string, enum: [and, or] }
          description: 複数条件の結合（and/or）
        - name: q
          in: query
          schema: { type: string }
          description: 自由語検索（実装側で対象項目を定義）
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComplianceInvoices'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/integration/ocr/invoice/process:
    post:
      tags: [integration]
      summary: 請求書OCR→買掛起票
      description: PDF→JSONのモック処理を想定。失敗はキュー再処理へ。
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrInvoiceProcessRequest'
      responses:
        '202':
          description: Accepted
        default:
          $ref: '#/components/responses/Error'

  /api/v1/audit/logs:
    get:
      tags: [compliance]
      summary: 監査ログ検索
      description: >-
        重要操作の監査ログを検索する。changes の値は機密項目がマスキングされる場合がある。
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
        - name: date_from
          in: query
          schema: { type: string, format: date-time }
        - name: date_to
          in: query
          schema: { type: string, format: date-time }
        - name: action
          in: query
          schema: { type: string }
        - name: entity_type
          in: query
          schema: { type: string }
        - name: entity_id
          in: query
          schema: { type: string }
        - name: actor_user_id
          in: query
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogs'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/status-codes:
    get:
      tags: [metadata]
      summary: ステータスコード取得
      description: ドメイン別のステータスコード一覧を返す（task|timesheet|invoice）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: domain
          in: query
          required: true
          schema: { type: string, enum: [task, timesheet, invoice, sales_order, purchase_order, project] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items: { $ref: '#/components/schemas/StatusCode' }
                required: [items]
        default:
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    TenantHeader:
      name: X-Tenant-ID
      in: header
      required: true
      schema:
        type: string
      description: マルチテナント識別子
    PageLimit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    PageCursor:
      name: cursor
      in: query
      required: false
      schema:
        type: string
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: >-
        例として `-created_at, name` のように指定する（降順は先頭に `-` を付与）。
  responses:
    Error:
      description: エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: array
              items:
                type: string
          required: [code, message]
      required: [error]
    Project:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        client_id:
          type: string
        status:
          type: string
          enum: [planned, active, onhold, closed]
        start_on:
          type: string
          format: date
        end_on:
          type: string
          format: date
      required: [id, name, status]
    TimesheetEntry:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        project_id:
          type: string
        task_id:
          type: string
        work_date:
          type: string
          format: date
        hours:
          type: number
          minimum: 0
        approval_status:
          type: string
          enum: [draft, submitted, approved, rejected]
      required: [user_id, project_id, work_date, hours]
    TimesheetStateChangeRequest:
      type: object
      properties:
        comment:
          type: string
          description: 承認・差戻し時の備考
        reason_code:
          type: string
          description: 差戻し理由コード（オプション）
      additionalProperties: false
    PaginatedTimesheets:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetEntry'
        next_cursor:
          type: string
      required: [items]
    SalesOrder:
      type: object
      properties:
        id: { type: string }
        order_number: { type: string }
        account_id: { type: string }
        order_date: { type: string, format: date }
        status: { type: string, enum: [draft, confirmed, fulfilled, cancelled] }
        total: { type: number }
        lines:
          type: array
          items: { $ref: '#/components/schemas/SalesOrderLine' }
      required: [id, order_number, account_id, status]
    PaginatedSalesOrders:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SalesOrder'
        next_cursor:
          type: string
      required: [items]
    PurchaseOrder:
      type: object
      properties:
        id: { type: string }
        po_number: { type: string }
        vendor_id: { type: string }
        order_date: { type: string, format: date }
        status: { type: string, enum: [draft, ordered, received, cancelled] }
        total: { type: number }
        lines:
          type: array
          items: { $ref: '#/components/schemas/PurchaseOrderLine' }
      required: [id, po_number, vendor_id, status]
    PaginatedPurchaseOrders:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrder'
        next_cursor:
          type: string
      required: [items]
    SalesOrderLine:
      type: object
      properties:
        line_id: { type: string, description: クライアント側の行識別子（任意） }
        item_code: { type: string }
        description: { type: string }
        qty: { type: number }
        unit_price: { type: number }
        amount: { type: number }
      required: [qty, unit_price]
    PurchaseOrderLine:
      type: object
      properties:
        line_id: { type: string, description: クライアント側の行識別子（任意） }
        item_code: { type: string }
        description: { type: string }
        qty: { type: number }
        unit_price: { type: number }
        amount: { type: number }
      required: [qty, unit_price]
    CreateSalesOrderRequest:
      type: object
      properties:
        account_id: { type: string }
        order_date: { type: string, format: date }
        lines:
          type: array
          items: { $ref: '#/components/schemas/SalesOrderLine' }
      required: [account_id, lines]
    UpdateSalesOrderRequest:
      type: object
      properties:
        order_date: { type: string, format: date }
        lines_mode:
          type: string
          enum: [replace, merge]
          description: 行の更新方法（replace=全置換, merge=行のマージ/上書き）
        lines_ops:
          type: array
          description: 行の差分操作（remove等）。`lines_mode=merge` 時に併用可。
          items:
            $ref: '#/components/schemas/LineOp'
        lines:
          type: array
          items: { $ref: '#/components/schemas/SalesOrderLine' }
      additionalProperties: false
    CreatePurchaseOrderRequest:
      type: object
      properties:
        vendor_id: { type: string }
        order_date: { type: string, format: date }
        lines:
          type: array
          items: { $ref: '#/components/schemas/PurchaseOrderLine' }
      required: [vendor_id, lines]
    UpdatePurchaseOrderRequest:
      type: object
      properties:
        order_date: { type: string, format: date }
        lines_mode:
          type: string
          enum: [replace, merge]
          description: 行の更新方法（replace=全置換, merge=行のマージ/上書き）
        lines_ops:
          type: array
          description: 行の差分操作（remove等）。`lines_mode=merge` 時に併用可。
          items:
            $ref: '#/components/schemas/LineOp'
        lines:
          type: array
          items: { $ref: '#/components/schemas/PurchaseOrderLine' }
      additionalProperties: false
    LineOp:
      type: object
      properties:
        op:
          type: string
          enum: [remove]
        line_id: { type: string }
        item_code: { type: string }
      required: [op]
    ProfitResponse:
      type: object
      properties:
        revenue:
          type: number
        labor_cost:
          type: number
        external_cost:
          type: number
        overhead:
          type: number
        gross_profit:
          type: number
        progress_based_revenue:
          type: number
      required: [labor_cost, external_cost, gross_profit]
    ComplianceInvoiceRequest:
      type: object
      properties:
        invoice_number:
          type: string
        issue_date:
          type: string
          format: date
        counterparty:
          type: string
        amount:
          type: number
        tax_amount:
          type: number
        file_uri:
          type: string
          description: PDFのストレージURI
        hash:
          type: string
          description: ファイルハッシュ（改ざん検知）
        timestamp:
          type: string
          format: date-time
          description: 電帳法要件の時刻情報
        timestamp_method:
          type: string
          enum: [tsa, system]
          description: タイムスタンプ手段（tsa=外部TSA/RFC3161, system=システム時刻）
        searchable_keys:
          type: array
          items:
            type: string
      required: [invoice_number, issue_date, counterparty, amount, file_uri, hash]
    ComplianceInvoice:
      type: object
      properties:
        id: { type: string }
        invoice_number: { type: string }
        issue_date: { type: string, format: date }
        counterparty: { type: string }
        amount: { type: number }
        tax_amount: { type: number }
        file_uri:
          type: string
          x-sensitive: true
        hash:
          type: string
          x-sensitive: true
        timestamp: { type: string, format: date-time }
        highlights:
          type: object
          additionalProperties:
            type: array
            items: { type: string }
          description: 自由語検索などのハイライト（フィールド毎）
      required: [id, invoice_number, issue_date, counterparty, amount, file_uri]
    PaginatedComplianceInvoices:
      type: object
      properties:
        items:
          type: array
          items: { $ref: '#/components/schemas/ComplianceInvoice' }
        next_cursor:
          type: string
      required: [items]
    PaginatedProjects:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        meta:
          $ref: '#/components/schemas/ProjectListMeta'
        next_cursor:
          type: string
          description: 次ページ取得時に指定するカーソル（末尾ID）。次ページがない場合はレスポンスに含まれません
      required: [items, meta]
    ProjectListMeta:
      type: object
      properties:
        total:
          type: integer
          description: フィルタ適用後の総件数
        returned:
          type: integer
          description: 今回レスポンスに含まれる件数
        fetched_at:
          type: string
          format: date-time
          description: データ取得時刻（ISO8601）
        fallback:
          type: boolean
          description: バックエンドがモック／フォールバック動作した場合は true
      required: [total, returned, fetched_at, fallback]
    OcrInvoiceProcessRequest:
      type: object
      properties:
        file_uri:
          type: string
        vendor_hint:
          type: string
        language:
          type: string
          default: ja
      required: [file_uri]
    AuditLog:
      type: object
      properties:
        id: { type: string }
        occurred_at: { type: string, format: date-time }
        actor_user_id: { type: string }
        action: { type: string }
        entity_type: { type: string }
        entity_id: { type: string }
        ip:
          type: string
          x-sensitive: true
        user_agent:
          type: string
          x-sensitive: true
        changes:
          type: array
          items:
            $ref: '#/components/schemas/AuditChange'
      required: [id, occurred_at, action]
    AuditChange:
      type: object
      properties:
        field: { type: string }
        before: {}
        after: {}
      required: [field]
    StatusCode:
      type: object
      properties:
        code: { type: string }
        name: { type: string }
        active: { type: boolean, default: true }
        ordinal: { type: integer, description: '表示順' }
      required: [code, name]
    LinkingOptions:
      type: object
      properties:
        rounding:
          type: object
          properties:
            unit:
              type: string
              enum: [line, document]
              description: 行単位または帳票単位で丸め
            mode:
              type: string
              enum: [half_up, half_even, truncate]
              description: 四捨五入/銀行丸め/切り捨て
          additionalProperties: false
      additionalProperties: false
    PaginatedAuditLogs:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
        next_cursor:
          type: string
      required: [items]
  /api/v1/contracts:
    get:
      tags: [contracts]
      summary: 契約一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContracts'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags: [contracts]
      summary: 契約作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '201':
          description: Created
        default:
          $ref: '#/components/responses/Error'

  /api/v1/invoices:
    get:
      tags: [compliance]
      summary: 請求書一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoices'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders:
    get:
      tags: [sales]
      summary: 受注一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
        - name: account_id
          in: query
          schema: { type: string }
        - name: status
          in: query
          schema: { type: string, enum: [draft, confirmed, fulfilled, cancelled] }
        - name: date_from
          in: query
          schema: { type: string, format: date }
        - name: date_to
          in: query
          schema: { type: string, format: date }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSalesOrders'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags: [sales]
      summary: 受注作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSalesOrderRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders/{id}:
    get:
      tags: [sales]
      summary: 受注詳細
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'
    patch:
      tags: [sales]
      summary: 受注更新
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSalesOrderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders/{id}/confirm:
    post:
      tags: [sales]
      summary: 受注確定
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders/{id}/fulfill:
    post:
      tags: [sales]
      summary: 受注出荷/履行
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders/{id}/cancel:
    post:
      tags: [sales]
      summary: 受注キャンセル
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/sales/orders/{id}/invoice:
    post:
      tags: [sales]
      summary: 受注から請求書作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkingOptions'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders:
    get:
      tags: [procurement]
      summary: 発注一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageCursor'
        - $ref: '#/components/parameters/Sort'
        - name: vendor_id
          in: query
          schema: { type: string }
        - name: status
          in: query
          schema: { type: string, enum: [draft, ordered, received, cancelled] }
        - name: date_from
          in: query
          schema: { type: string, format: date }
        - name: date_to
          in: query
          schema: { type: string, format: date }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrders'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags: [procurement]
      summary: 発注作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePurchaseOrderRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders/{id}:
    get:
      tags: [procurement]
      summary: 発注詳細
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'
    patch:
      tags: [procurement]
      summary: 発注更新
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePurchaseOrderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders/{id}/order:
    post:
      tags: [procurement]
      summary: 発注確定
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders/{id}/receive:
    post:
      tags: [procurement]
      summary: 検収（入荷）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders/{id}/cancel:
    post:
      tags: [procurement]
      summary: 発注キャンセル
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        default:
          $ref: '#/components/responses/Error'

  /api/v1/procurement/purchase-orders/{id}/bill:
    post:
      tags: [procurement]
      summary: 発注から買掛（ベンダービル）作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkingOptions'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorBill'
        default:
          $ref: '#/components/responses/Error'
    Contract:
      type: object
      properties:
        id: { type: string }
        account_id: { type: string }
        type: { type: string }
        start_on: { type: string, format: date }
        end_on: { type: string, format: date }
        billing_terms: { type: object }
        progress_method: { type: string, enum: [cost, effort, milestone] }
      required: [id, account_id]

    Invoice:
      type: object
      properties:
        id: { type: string }
        account_id: { type: string }
        issue_date: { type: string, format: date }
        due_date: { type: string, format: date }
        status: { type: string, enum: [draft, issued, paid, cancelled] }
        invoice_number: { type: string }
        total: { type: number }
        tax_total: { type: number }
      required: [id, account_id, status, invoice_number, issue_date]

    PaginatedContracts:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        next_cursor:
          type: string
      required: [items]

    PaginatedInvoices:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
        next_cursor:
          type: string
      required: [items]
  /api/v1/contracts/{id}:
    get:
      tags: [contracts]
      summary: 契約詳細
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        default: { $ref: '#/components/responses/Error' }
    patch:
      tags: [contracts]
      summary: 契約更新（改定履歴は別途記録）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '200': { description: OK }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/contracts/{id}/renewal-alert:
    post:
      tags: [contracts]
      summary: 契約更新アラート設定
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/contracts/{id}/esign:
    post:
      tags: [contracts]
      summary: 電子署名プロセス開始（外部連携）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '202': { description: Accepted }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/hr/timeclock:
    post:
      tags: [hr]
      summary: 打刻（出勤/退勤/休憩）
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: { type: string, enum: [in, out, break_in, break_out] }
                occurred_at: { type: string, format: date-time }
              required: [type]
      responses:
        '201': { description: Created }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/hr/attendance/close:
    post:
      tags: [hr]
      summary: 月次勤怠締め
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                period: { type: string, description: 'YYYY-MM' }
              required: [period]
      responses:
        '202': { description: Accepted }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/hr/36-check:
    get:
      tags: [hr]
      summary: 36協定上限チェックレポート
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
        - name: period
          in: query
          schema: { type: string, description: 'YYYY-MM' }
      responses:
        '200': { description: OK }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/accounting/gl-mappings:
    get:
      tags: [accounting]
      summary: 勘定科目マッピング一覧
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      responses:
        '200': { description: OK }
        default: { $ref: '#/components/responses/Error' }
    post:
      tags: [accounting]
      summary: 勘定科目マッピング登録/更新
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201': { description: Created }
        default: { $ref: '#/components/responses/Error' }
  /api/v1/accounting/journal-exports:
    post:
      tags: [accounting]
      summary: 仕訳エクスポート作成
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TenantHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                period: { type: string, description: 'YYYY-MM' }
              required: [period]
      responses:
        '202': { description: Accepted }
        default: { $ref: '#/components/responses/Error' }

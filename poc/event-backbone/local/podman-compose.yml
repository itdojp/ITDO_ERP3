version: '3.9'
services:
  rabbitmq:
    image: docker.io/library/rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    restart: unless-stopped

  redis:
    image: docker.io/library/redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  pm-service:
    build:
      context: ./services/pm-service
      dockerfile: Dockerfile
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672}
      NUM_SHARDS: ${NUM_SHARDS:-4}
      USE_MINIO: ${USE_MINIO:-false}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio}
      MINIO_PORT: ${MINIO_PORT:-9000}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-events}
      MINIO_PUBLIC_ENDPOINT: ${MINIO_PUBLIC_ENDPOINT:-localhost}
      MINIO_PUBLIC_PORT: ${MINIO_PUBLIC_PORT:-9000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      PORT: ${PM_CONTAINER_PORT:-3001}
    ports:
      - "${PM_PORT:-3001}:${PM_CONTAINER_PORT:-3001}"
    depends_on:
      - rabbitmq
      - redis
      - minio
    restart: on-failure

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672}
      NUM_SHARDS: ${NUM_SHARDS:-4}
      PRODUCER_BATCH: ${PRODUCER_BATCH:-100}
      PRODUCER_RPS: ${PRODUCER_RPS:-20}
      USE_MINIO: ${USE_MINIO:-false}
    depends_on:
      - rabbitmq
      - minio
    restart: on-failure

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      NUM_SHARDS: ${NUM_SHARDS:-4}
      FAIL_RATE: ${FAIL_RATE:-0.0}
    depends_on:
      - rabbitmq
      - redis
    restart: on-failure

  minio:
    image: docker.io/minio/minio:RELEASE.2024-08-17T01-24-54Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  loki:
    image: docker.io/grafana/loki:2.9.3
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    restart: unless-stopped

  promtail:
    image: docker.io/grafana/promtail:2.9.3
    depends_on:
      - loki
    volumes:
      - ./logging/promtail-config.yml:/etc/promtail/config.yml:ro
      - ../../logs:/var/log/poc-smoke:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped

volumes:
  minio-data:
